/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// Macro to apply toggle-layer-on-tap/momentary-layer-on-hold to a specific layer
#define TOG_MO(layer) &tog_mo layer layer

// Define Layer
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

	// active F_row mod-tap by 200ms
	 &mt {
		 tapping-term-ms = <200>;
		 };
		 
/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
	
	
	// active close by double tap alt
	behaviors {
        td0: ALT_F4 {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_F4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LALT>, <&kp LA(F4)>;
		};
    };
	
	//active cut by double tap x
	behaviors {		
		td1: CTR_X {
            compatible = "zmk,behavior-tap-dance";
            label = "CTR_X";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp X>, <&kp LC(X)>;
		};
    };	
	
	//active copy by double tap c
	behaviors {		
		td2: CTR_C {
            compatible = "zmk,behavior-tap-dance";
            label = "CTR_C";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C>, <&kp LC(C)>;
		};
    };	
	
	//active paste by double tap v
	behaviors {		
		td3: CTR_V {
            compatible = "zmk,behavior-tap-dance";
            label = "CTR_V";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp V>, <&kp LC(V)>;
        };
    };

	//active clipboard by double tap windows
	behaviors {		
		td4: WIN_V {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_V";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LWIN>, <&kp LG(V)>;
        };
    };
	
	//active undo by double tap z
	behaviors {		
		td5: CTR_Z {
            compatible = "zmk,behavior-tap-dance";
            label = "CTR_Z";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Z>, <&kp LC(Z)>;
        };
    };
	
	//active select all by double tap a
	behaviors {		
		td6: CTR_A {
            compatible = "zmk,behavior-tap-dance";
            label = "CTR_A";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp LC(A)>;
        };
    };
	
	
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |       |  None  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | WIN |  CTRL| ALT  | ENTER|  LOWER |       |  RAISE | SPACE|  DEL  | PRINT |  WIN |
            bindings = <
			
&kp ESC  	&mt F1 N1  &mt F2 N2   &mt F3 N3   &mt F4 N4    &mt F5 N5                             &mt F6 N6     &mt F7 N7    &mt F8 N8     &mt F9 N9    &mt F10 N0   &kp BSPC
&kp TAB   	&mt F11 Q  &mt F12 W   &kp E       &kp R        &kp T                                 &kp Y         &kp U        &kp I         &kp O        &kp P        &kp BSLH
&kp CAPS  	&td6  	   &kp S       &kp D       &kp F        &kp G                                 &kp H         &kp J        &kp K         &kp L        &kp SEMI     &kp SQT
&kp LSHIFT      &td5  	   &td1        &td2        &td3         &kp B      &kp C_MUTE    &none        &kp N         &kp M        &kp COMMA     &kp DOT      &kp FSLH     &kp RSHIFT
				       &td4        &kp LCTRL    &td0  	   &kp ENTER  	 &mo LOWER    &mo RAISE     &kp SPACE    &kp DEL       &kp PSCRN    &kp LG(L)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

// ------------------------------------------------------------------------------------------------------------
// |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
// |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
// |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
// |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
//                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                    &none &none &none &none &none &none
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                                 &none &none &none &none &none &none
&none                           &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                           &none &none &none &none &none &none
&none                           &none           &none           &none           &none           &none               &rgb_ug RGB_TOG  &none      &none &none &none &none &none &none
                                                &none           &none           &none           &none               &none            &none      &none &none &none &none
        >;
        };

    };
};
