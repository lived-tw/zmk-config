/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


// Define Layer
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3


	// active F_row mod-tap by 200ms
		&mt {
			tapping-term-ms = <200>;
			};
 
/ {
	// Activate ADJUST layer by pressing raise and lower
		conditional_layers {
			compatible = "zmk,conditional-layers";
			adjust_layer {
				if-layers = <LOWER RAISE>;
				then-layer = <ADJUST>;
			};
		};
	
	
	//Double tap A to select all
		behaviors {		
			td0: CTR_A {
				compatible = "zmk,behavior-tap-dance";
				label = "CTR_A";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp A>, <&kp LC(A)>;
			};
		};
	
	
	//Double tap Win to active clipboard
		behaviors {		
			td1: WIN_V {
				compatible = "zmk,behavior-tap-dance";
				label = "WIN_V";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp LWIN>, <&kp LG(V)>;
			};
		};
	
	
	//Double tap Z to undo
		behaviors {		
			td2: CTR_Z {
				compatible = "zmk,behavior-tap-dance";
				label = "CTR_Z";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp Z>, <&kp LC(Z)>;
			};
		};	
	
	
	//Double tap X to cut
		behaviors {		
			td3: CTR_X {
				compatible = "zmk,behavior-tap-dance";
				label = "CTR_X";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp X>, <&kp LC(X)>;
			};
		};	
	

	//Double tap C to copy
		behaviors {		
			td4: CTR_C {
				compatible = "zmk,behavior-tap-dance";
				label = "CTR_C";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp C>, <&kp LC(C)>;
			};
		};

		
	//Double tap V to paste
		behaviors {		
			td5: CTR_V {
				compatible = "zmk,behavior-tap-dance";
				label = "CTR_V";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp V>, <&kp LC(V)>;
			};
		};	
		
	
	//Double tap ALT to close
		behaviors {
			td6: ALT_F4 {
				compatible = "zmk,behavior-tap-dance";
				label = "ALT_F4";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp LALT>, <&kp LA(F4)>;
			};
		};
	

	//Double tap low layer to lock
		behaviors {
			td7: Lower_layer {
				compatible = "zmk,behavior-tap-dance";
				label = "LOWER_layer";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&mo LOWER>, <&tog LOWER>;
			};
		};
		
		
	//Double tap raise layer to lock
		behaviors {
			td8: Raise_layer {
				compatible = "zmk,behavior-tap-dance";
				label = "RAISE_layer";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&mo RAISE>, <&tog RAISE>;
			};
		};	
	
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// |  WIN  |  Z  |  X  |  C   |  V   |  B   |  MUTE  |       | WinLock|  N   |  M    |  ,    |  .   |   /   | PRINT |
//               |CTRL | ALT  | SHIFT|ENTER |  LOWER |       |  RAISE | SPACE|  DEL  | HOME  |  END |
            bindings = <
			
&kp ESC  	&mt F1 N1  &mt F2 N2   &mt F3 N3   &mt F4 N4    &mt F5 N5                             &mt F6 N6     &mt F7 N7    &mt F8 N8     &mt F9 N9   &mt F10 N0   &kp BSPC
&kp TAB   	&kp Q  	   &kp W       &kp E       &kp R        &kp T                                 &kp Y         &kp U        &kp I         &mt F11 O   &mt F12 P    &kp BSLH
&kp CAPS  	&td0  	   &kp S       &kp D       &kp F        &kp G                                 &kp H         &kp J        &kp K         &kp L       &kp SEMI     &kp SQT
&td1  		&td2  	   &td3        &td4        &td5         &kp B      &kp C_MUTE      &kp LG(L)  &kp N         &kp M        &kp COMMA     &kp DOT     &kp FSLH     &kp PSCRN
					   &kp LCTRL   &td6   	   &kp LSHFT  	&kp ENTER  &td7     	   &td8       &kp SPACE     &kp DEL      &kp HOME      &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |   |   |   |   |   |   |                   |    |  7  |  8  |  9  |  +  | BKSPC |
// |   |   |   |   |   |   |                   |    |  4  |  5  |  6  |  -  | none  |
// |   |   |   |   |   |   |                   |    |  1  |  2  |  3  |  *  | ENTER |
// |   |   |   |   |   |   |reset| 		 |     |    |  0  |  ,  |  .  |  \  | PRINT |
//         |   |   |   |   |     | 		 |     |    |     |     |     |
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                     &trans    &kp KP_N7  &kp KP_N8    &kp KP_N9    &kp KP_PLUS     &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans    &kp KP_N4  &kp KP_N5    &kp KP_N6    &kp KP_MINUS    &none
&trans  &trans  &trans  &trans   &trans   &trans                 	 &trans    &kp KP_N1  &kp KP_N2    &kp KP_N3    &kp KP_MULTIPLY &kp ENTER
&trans  &trans 	&trans 	&trans 	 &trans   &trans  &reset     &trans  &trans    &kp KP_N0  &kp KP_COMMA &kp KP_DOT   &kp KP_DIVIDE   &trans
                &trans  &trans   &trans   &trans  &trans     &trans  &trans    &trans     &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |   |   |   |   |   |   |                   |    |    |      |     |    |    |
// |   |   |   |   |   |   |                   |    |    |  up  |     |    |    |
// |   |   |   |   |   |   |                   |    |left| down |right|    |    |
// |   |   |   |   |   |   |    | 		 |reset|    |    |      |     |    |    |
//         |   |   |   |   |    | 		 |     |    |    |      |     |
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                     &trans    &trans   &trans    &trans     &trans   &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans    &trans   &kp UP    &trans     &trans   &trans
&trans  &trans  &trans  &trans   &trans   &trans                 	 &trans    &kp LEFT &kp DOWN  &kp RIGHT  &trans   &trans
&trans  &trans 	&trans 	&trans 	 &trans   &trans  &trans     &reset  &trans    &trans   &trans    &trans     &trans   &trans
                &trans  &trans   &trans   &trans  &trans     &trans  &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

// ------------------------------------------------------------------------------------------------------------
// |BTCLR  | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                        |   |   |   |   |   |   |
// |RGB_TOG|RGB_HUI|RGB_SAI|RGB_BRI|RGB_SPI|RGB_EFF|                        |   |   |   |   |   |   |
// |       |RGB_HUD|RGB_SAD|RGB_BRD|RGB_SPD|RGB_EFR|                        |   |   |   |   |   |   |
// |       |       |       |       |       |       |       |         |      |   |   |   |   |   |   |
//                 |       |       |       |       |       |         |      |   |   |   |   |

        Adjust_layer {
        bindings = <
&bt BT_CLR          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                    &none &none &none &none &none &none
&rgb_ug RGB_TOG 	&rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF 								  &none &none &none &none &none &none
&none               &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR                                 &none &none &none &none &none &none
&none               &none           &none           &none            &none            &none               &none              &none    &none &none &none &none &none &none
                                    &none           &none            &none            &none               &none              &none    &none &none &none &none
        >;
        };

    };
};
